// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class HatsModuleFactory_ModuleDeployed extends ethereum.Event {
  get params(): HatsModuleFactory_ModuleDeployed__Params {
    return new HatsModuleFactory_ModuleDeployed__Params(this);
  }
}

export class HatsModuleFactory_ModuleDeployed__Params {
  _event: HatsModuleFactory_ModuleDeployed;

  constructor(event: HatsModuleFactory_ModuleDeployed) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get instance(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get hatId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get otherImmutableArgs(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get initData(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class HatsModuleFactory extends ethereum.SmartContract {
  static bind(address: Address): HatsModuleFactory {
    return new HatsModuleFactory("HatsModuleFactory", address);
  }

  HATS(): Address {
    let result = super.call("HATS", "HATS():(address)", []);

    return result[0].toAddress();
  }

  try_HATS(): ethereum.CallResult<Address> {
    let result = super.tryCall("HATS", "HATS():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  batchCreateHatsModule(
    _implementations: Array<Address>,
    _hatIds: Array<BigInt>,
    _otherImmutableArgsArray: Array<Bytes>,
    _initDataArray: Array<Bytes>
  ): boolean {
    let result = super.call(
      "batchCreateHatsModule",
      "batchCreateHatsModule(address[],uint256[],bytes[],bytes[]):(bool)",
      [
        ethereum.Value.fromAddressArray(_implementations),
        ethereum.Value.fromUnsignedBigIntArray(_hatIds),
        ethereum.Value.fromBytesArray(_otherImmutableArgsArray),
        ethereum.Value.fromBytesArray(_initDataArray)
      ]
    );

    return result[0].toBoolean();
  }

  try_batchCreateHatsModule(
    _implementations: Array<Address>,
    _hatIds: Array<BigInt>,
    _otherImmutableArgsArray: Array<Bytes>,
    _initDataArray: Array<Bytes>
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "batchCreateHatsModule",
      "batchCreateHatsModule(address[],uint256[],bytes[],bytes[]):(bool)",
      [
        ethereum.Value.fromAddressArray(_implementations),
        ethereum.Value.fromUnsignedBigIntArray(_hatIds),
        ethereum.Value.fromBytesArray(_otherImmutableArgsArray),
        ethereum.Value.fromBytesArray(_initDataArray)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  createHatsModule(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes,
    _initData: Bytes
  ): Address {
    let result = super.call(
      "createHatsModule",
      "createHatsModule(address,uint256,bytes,bytes):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs),
        ethereum.Value.fromBytes(_initData)
      ]
    );

    return result[0].toAddress();
  }

  try_createHatsModule(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes,
    _initData: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createHatsModule",
      "createHatsModule(address,uint256,bytes,bytes):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs),
        ethereum.Value.fromBytes(_initData)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  deployed(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes
  ): boolean {
    let result = super.call(
      "deployed",
      "deployed(address,uint256,bytes):(bool)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs)
      ]
    );

    return result[0].toBoolean();
  }

  try_deployed(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "deployed",
      "deployed(address,uint256,bytes):(bool)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getHatsModuleAddress(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes
  ): Address {
    let result = super.call(
      "getHatsModuleAddress",
      "getHatsModuleAddress(address,uint256,bytes):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs)
      ]
    );

    return result[0].toAddress();
  }

  try_getHatsModuleAddress(
    _implementation: Address,
    _hatId: BigInt,
    _otherImmutableArgs: Bytes
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getHatsModuleAddress",
      "getHatsModuleAddress(address,uint256,bytes):(address)",
      [
        ethereum.Value.fromAddress(_implementation),
        ethereum.Value.fromUnsignedBigInt(_hatId),
        ethereum.Value.fromBytes(_otherImmutableArgs)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  version(): string {
    let result = super.call("version", "version():(string)", []);

    return result[0].toString();
  }

  try_version(): ethereum.CallResult<string> {
    let result = super.tryCall("version", "version():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _hats(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _version(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BatchCreateHatsModuleCall extends ethereum.Call {
  get inputs(): BatchCreateHatsModuleCall__Inputs {
    return new BatchCreateHatsModuleCall__Inputs(this);
  }

  get outputs(): BatchCreateHatsModuleCall__Outputs {
    return new BatchCreateHatsModuleCall__Outputs(this);
  }
}

export class BatchCreateHatsModuleCall__Inputs {
  _call: BatchCreateHatsModuleCall;

  constructor(call: BatchCreateHatsModuleCall) {
    this._call = call;
  }

  get _implementations(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _hatIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get _otherImmutableArgsArray(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }

  get _initDataArray(): Array<Bytes> {
    return this._call.inputValues[3].value.toBytesArray();
  }
}

export class BatchCreateHatsModuleCall__Outputs {
  _call: BatchCreateHatsModuleCall;

  constructor(call: BatchCreateHatsModuleCall) {
    this._call = call;
  }

  get success(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CreateHatsModuleCall extends ethereum.Call {
  get inputs(): CreateHatsModuleCall__Inputs {
    return new CreateHatsModuleCall__Inputs(this);
  }

  get outputs(): CreateHatsModuleCall__Outputs {
    return new CreateHatsModuleCall__Outputs(this);
  }
}

export class CreateHatsModuleCall__Inputs {
  _call: CreateHatsModuleCall;

  constructor(call: CreateHatsModuleCall) {
    this._call = call;
  }

  get _implementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _hatId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _otherImmutableArgs(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _initData(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CreateHatsModuleCall__Outputs {
  _call: CreateHatsModuleCall;

  constructor(call: CreateHatsModuleCall) {
    this._call = call;
  }

  get _instance(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
